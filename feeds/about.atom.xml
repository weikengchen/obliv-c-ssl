<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Obliv-C</title><link href="http://oblivc.org/" rel="alternate"></link><link href="http://oblivc.org/feeds/about.atom.xml" rel="self"></link><id>http://oblivc.org/</id><updated>2015-04-10T00:00:00+02:00</updated><entry><title>About Obliv-C</title><link href="http://oblivc.org/" rel="alternate"></link><updated>2015-04-10T00:00:00+02:00</updated><author><name>Samee Zahur</name></author><id>tag:oblivc.org,2015-04-10:</id><summary type="html">&lt;p&gt;Obliv-C is a simple GCC wrapper that makes it easy to embed secure computation protocols inside regular C programs. The idea is simple: if you are performing a multi-party distributed computation with sensitive data, just write it in our Obliv-C langauge and compile/link it with your project. The result will be a secure cryptographic protocol that performs this operation without revealing any of the inputs or intermediate values of the computation to any of the parties. Only the outputs are finally shared.&lt;/p&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Step 1) Installation of dependencies (on Ubuntu systems) &lt;code&gt;sudo apt-get install ocaml libgcrypt20-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Step 2) Make a new folder for downloading Obliv-C, and do a &lt;code&gt;git clone http://github.com/samee/obliv-c/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Step 3) Build the project: &lt;code&gt;./configure &amp;amp;&amp;amp; make RELEASE=1&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Step 4) Start using it! The compiler is a GCC wrapper script found in &lt;code&gt;bin/oblivcc&lt;/code&gt;. Example codes are in &lt;code&gt;test/oblivc&lt;/code&gt;. A language tutorial is found &lt;a href="http://goo.gl/TXzxD0"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, if you have any questions, either open an issue here on GitHub or just send me an email at samee@virginia.edu.&lt;/p&gt;</summary></entry></feed>